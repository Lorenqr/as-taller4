services:
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: frontend
    ports:
      - "8080:8080"
    environment:
      - API_GATEWAY_URL=http://api-gateway:8000
      - FRONT_SECRET_KEY=supersecretfrontend
    depends_on:
      - api-gateway

  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8000:8000"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8000
      - PRODUCTS_SERVICE_URL=http://products-service:8000
      - ORDERS_SERVICE_URL=http://orders-service:8000
      - PAYMENTS_SERVICE_URL=http://payments-service:8000
    depends_on:
      - auth-service
      - products-service
      - orders-service
      - payments-service

  # Autenticaci√≥n
  auth-service:
    build:
      context: .
      dockerfile: ./services/authentication/Dockerfile
    container_name: auth-service
    ports:
      - "8001:8000"
    environment:
      - AUTH_DB_URL=mongodb://auth-db:27017/auth_db
      - SECRET_KEY=supersecretkey
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
    depends_on:
      - auth-db

  auth-db:
    image: mongo:6
    container_name: auth-db
    ports:
      - "27017:27017"
    volumes:
      - auth_data:/data/db

  # Productos
  products-service:
    build:
      context: .
      dockerfile: ./services/products/Dockerfile
    container_name: products-service
    ports:
      - "8002:8000"
    environment:
      - PRODUCTS_DB_URL=postgresql://postgres:postgres@products-db:5432/products_db
    depends_on:
      - products-db

  products-db:
    image: postgres:15
    container_name: products-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=products_db
    ports:
      - "5433:5432"
    volumes:
      - products_data:/var/lib/postgresql/data

  # Pedidos
  orders-service:
    build:
      context: .
      dockerfile: ./services/orders/Dockerfile
    container_name: orders-service
    ports:
      - "8003:8000"
    environment:
      - ORDERS_DB_URL=postgresql://postgres:postgres@orders-db:5432/orders_db
    depends_on:
      - orders-db

  orders-db:
    image: postgres:15
    container_name: orders-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=orders_db
    ports:
      - "5434:5432"
    volumes:
      - orders_data:/var/lib/postgresql/data

  # Pagos
  payments-service:
    build:
      context: .
      dockerfile: ./services/payments/Dockerfile
    container_name: payments-service
    ports:
      - "8004:8000"
    environment:
      - PAYMENTS_DB_URL=postgresql://postgres:postgres@payments-db:5432/payments_db
    depends_on:
      - payments-db

  payments-db:
    image: postgres:15
    container_name: payments-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=payments_db
    ports:
      - "5435:5432"
    volumes:
      - payments_data:/var/lib/postgresql/data

volumes:
  auth_data:
  products_data:
  orders_data:
  payments_data:
